/*实例样式*/
html {
  overflow:initial;
  -webkit-overflow-scrolling : touch;
}

:root {
  overflow:initial;
}

:root body {
  position: absolute;
}

body {
  min-width: 100%!important;
  width: 100vw;
}
body #root .mobile {
  overflow-y:auto;
  overflow-x:hidden;
  // ::-webkit-scrollbar {
  //   width: 1px;
  // }
}


.engine-layout.engine-mobile-default {
  margin: @LayoutMargin;
  padding: @LayoutPadding;
  font-size: @LayoutGlobalFontSize;
  color: @LayoutGlobalColor;
  background: @LayoutGlobalBackground;
  text-align: @LayoutGlobalAlign;
  padding-right: if((@LayoutRightPadding=0), unset, @LayoutRightPadding);
  position: if((@LayoutButtonGroupIsPosition=true), relative, unset);
  padding-top: if((@LayoutButtonGroupIsPosition=true and not(@LayoutButtonGroupTop=unset)), @LayoutButtonGroupHeight, unset);
  padding-bottom: if((@LayoutButtonGroupIsPosition=true and not(@LayoutButtonGroupBottom=unset)), @LayoutButtonGroupHeight, unset);
  min-width: unset;
  // transform:if((@LayoutButtonGroupIsPosition=true and @LayoutButtonGroupPosition=fixed),translateZ(0),unset);
}

.btn-group-item-width(normal) {
}

.btn-group-item-width(@width) {
  width: @width;
}

.btn-group-width(@width) {
  > div {
    .btn-group-item-width(@width);
    &.engine-layout-col-empty {
      width: 0;
    }
  }
}

.btn-group-align(left,@width) {
  .btn-group-width(@width)
}

.btn-group-align(center,@width) {
  display: flex;
  justify-content: center;
  .btn-group-width(@width)
}

.btn-group-align(@align,@width) {
}

.engine-layout.engine-mobile-default, .engine-mobile-page {
  .am-list-body {
    background-color: inherit;
    .am-list-item{
      background-color:inherit;
    }
    border: 0;
  }
  .am-list-body {
    &::before{
      content: '';
      height: 0;
      width:0;
    }
    &::after{
      height: 0;
      width: 0;
    }
  }
  .am-list-item .am-list-line .am-list-extra {
    flex-basis: 90%;
    text-align: @LayoutGlobalAlign;
  }
  .engine-layout-row {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    display: flex;
    overflow: hidden;
    align-items: center;
    justify-content: center;
    border-bottom: solid 1px #ededed;
    min-height: 4.4rem;
    line-height: 4.4rem;
  }
  .engine-layout-group {
    width: 100%;
    padding: 0;
    margin: 0;
  }
  .engine-layout-row-text-title {
    margin-right: 0;
    width: if((@LayoutRightPadding=0), 100%, auto);
    font-size: if((@LayoutTitleFontSize=normal), @LayoutGlobalFontSize, @LayoutTitleFontSize);
    font-weight: @LayoutTitleBold;
    color: if((@LayoutTitleColor=normal), @LayoutGlobalColor, @LayoutTitleColor);
    background-color: if((@LayoutTitleBackground=normal), @LayoutThemeColor, @LayoutTitleBackground);
    text-align: if((@LayoutTitleAlign=normal), @LayoutGlobalAlign, @LayoutTitleAlign);
    padding: if((@LayoutTitlePadding=normal), @LayoutGlobalPadding, @LayoutTitlePadding);
  }
  .engine-layout-title {
    height: if((@LayoutTitleHeight=normal), @LayoutGlobalHeight, @LayoutTitleHeight);
    line-height: if((@LayoutTitleHeight=normal), @LayoutGlobalHeight, @LayoutTitleHeight);
    width: if((@LayoutTitleWidth=normal), @LayoutGlobalWidth, @LayoutTitleWidth);
    margin: if((@LayoutTitleMargin=normal), @LayoutGlobalMargin, @LayoutTitleMargin);
    position: relative;
    &:before {
      content: ' ';
      width: 6px;
      height: 20px;
      margin-right: 6px;
      background-color: #036eb4;
      display: inline-block;
      margin-bottom: -4px;
    }
    &-icon {
      position: absolute;
      right: 1rem;
      top: 0.4rem;
      cursor: pointer;
    }
  }
  .engine-page-table {
    position: static !important;
    overflow: unset !important;
    padding: 0 10px;
    .am-list-view-scrollview-content {
      position: static !important;
      .am-list-item {
        .am-list-content {
          padding-top: 0;
          padding-bottom: 0;
          .engine-page-table-rowheader{
            position: relative;
            .engine-layout-title {
              padding-left: 0;
              &::before{
                content: unset;
                background: unset;
              }
              &-icon{
                position: absolute;
                right: unset;
                top: 50%;
                left: 0.5rem;
                line-height: 2rem;
                height: 2rem;
                transform: translateY(-50%);
              }
            }
            .engine-page-table-rowremove{
              color: red;
              position: absolute;
              right: 8px;
              top: 50%;
              transform: translateY(-50%);
            }
          }
        }
      }
      .am-list-footer {
        padding: 0;
      }
    }
    .am-list-item {
      padding-left: 0;
    }
    .engine-mobile-list {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 15px;
      &.hide {
        display: none;
      }
      &.engine-mobile-list-select {
        .engine-mobile-list-content {
          width: 90%;
          &.engine-mobile-page-single-row{
            .am-list-body{
              .am-list-item{
                background-color:transparent;
                .am-list-content{
                  display: none;
                }
                .am-list-extra{
                  flex-basis: 100%;
                  text-align: center;
                }
              }
            }
          }
        }
      }
      .am-list-item {
        background-color: transparent;
        .form-text {
          .am-list-body,.am-list-item{
            background-color:transparent;
            &::after{
              height: 0!important;
            }
            &::before{
              height: 0!important;
            }
          }
        }
      }
      .engine-mobile-list-check {
        width: 10%;
        text-align: center;
        &.engine-mobile-radio {
          .am-radio {
            border-radius: 10px;
          }
          .checked {
            .am-radio-inner {
              height: 12px;
              top: 0px;
              right: 5px;
            }
          }
        }
        .checked {
          .am-radio-inner {
            border-style: solid;
            border-width: 1.5px;
            border-color: #108ee9;
            border-left-width: 0;
            border-top-width: 0;
            transform: rotate(45deg);
            width: 7px;
            height: 14px;
            top: -1px;
            right: 5px;
          }
        }
        .am-radio {
          width: 20px;
          height: 20px;
          border: solid 1px #ccc;
          box-sizing: border-box;
          .am-radio-inner::after {
            display: none;
          }
          > * {
            width: inherit;
            height: inherit;
          }
        }
      }
      .engine-mobile-list-content {
        width: 100%;
        .am-list-body .am-list-item .am-list-line {
          border-bottom: solid 1px #ededed;
          .am-list-line{
            border-bottom: 0;
          }
        }
        .am-list-line {
          &::after {
            height: 0;
            content: '';
          }
        }
        .am-list-content {
          flex-basis: 37%;
          font-size: @LayoutGlobalFontSize;
          color: @LayoutGlobalColor;
          padding-left: 0;
        }
        .engine-mobile-form-required{
          .am-list-content{
            position: relative;
            &::before{
              content: '*';
              color: red;
              margin-right: 2px;
            }
          }
        }
        .am-list-extra {
          flex-basis: 63%;
          text-align: @LayoutGlobalAlign;
          white-space: unset;
          color: @LayoutGlobalColor;
          padding-top: 0;
          padding-bottom: 0;
        }
      }
    }
  }

  .engine-layout-row-text-label {
    font-size: if((@LayoutLabelFontSize=normal), @LayoutGlobalFontSize, @LayoutLabelFontSize);
    font-weight: @LayoutLabelBold;
    color: if((@LayoutLabelColor=normal), @LayoutGlobalColor, @LayoutLabelColor);
    background-color: if((@LayoutLabelBackground=normal), @LayoutGlobalBackground, @LayoutLabelBackground);
    padding: if((@LayoutLabelPadding=normal), @LayoutGlobalPadding, @LayoutLabelPadding);
    text-align: if((@LayoutLabelAlign=normal), @LayoutGlobalAlign, @LayoutLabelAlign);
    justify-content: left;
    min-height: 2.8rem;
    .engine-layout-text {
      width: 95%;
      white-space: nowrap;
      // padding-left: 1.9rem;
      overflow: hidden;
      text-overflow: ellipsis;
      // &.requiredNotice:before{
      //   margin-left: -1.8rem;
      //   width: 1.7rem;
      // }
    }
  }
  .engine-layout-text {
    display: inline-block;
    height: if((@LayoutLabelHeight=normal), @LayoutGlobalHeight, @LayoutLabelHeight);
    line-height: if((@LayoutLabelLineHeight=normal), 1.8rem, @LayoutLabelLineHeight);
    width: if((@LayoutLabelWidth=normal), @LayoutGlobalWidth, @LayoutLabelWidth);
    margin: if((@LayoutLabelMargin=normal), @LayoutGlobalMargin, @LayoutLabelMargin);
  }
  .engine-layout-row-text-content {
    font-size: if((@LayoutContentFontSize=normal), @LayoutGlobalFontSize, @LayoutContentFontSize);
    font-weight: @LayoutContentBold;
    color: if((@LayoutContentColor=normal), @LayoutGlobalColor, @LayoutContentColor);
    background-color: if((@LayoutContentBackground=normal), @LayoutGlobalBackground, @LayoutContentBackground);
    padding: if((@LayoutContentPadding=normal), @LayoutGlobalPadding, @LayoutContentPadding);
    text-align: if((@LayoutContentAlign=normal), @LayoutGlobalAlign, @LayoutContentAlign);
  }
  .engine-layout-row-input {
    font-size: if((@LayoutInputFontSize=normal), @LayoutGlobalFontSize, @LayoutInputFontSize);
    font-weight: @LayoutInputBold;
    color: if((@LayoutInputColor=normal), @LayoutGlobalColor, @LayoutInputColor);
    background-color: if((@LayoutInputBackground=normal), @LayoutGlobalBackground, @LayoutInputBackground);
    text-align: if((@LayoutInputAlign=normal), @LayoutGlobalAlign, @LayoutInputAlign);
    padding: 0;
  }
  .ant-input {
    padding: if((@LayoutInputPadding=normal), @LayoutGlobalPadding, @LayoutInputPadding);
    height: if((@LayoutInputHeight=normal), @LayoutGlobalHeight, @LayoutInputHeight);
    line-height: if((@LayoutInputLineHeight=normal), @LayoutGlobalHeight, @LayoutInputLineHeight);
    width: if((@LayoutInputWidth=normal), @LayoutGlobalWidth, @LayoutInputWidth);
    margin: if((@LayoutInputMargin=normal), @LayoutGlobalMargin, @LayoutInputMargin);
    border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
    border-radius: if((@LayoutInputBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutInputBorderRadius);
    &:active, &:focus {
      box-shadow: @LayoutInputBoxShadow;
    }
    &:hover {
      border-color: @LayoutInputHoverBorderColor;
    }
  }
  .engine-layout-row-textarea {
    font-size: if((@LayoutInputFontSize=normal), @LayoutGlobalFontSize, @LayoutInputFontSize);
    font-weight: @LayoutInputBold;
    color: if((@LayoutInputColor=normal), @LayoutGlobalColor, @LayoutInputColor);
    background-color: if((@LayoutInputBackground=normal), @LayoutGlobalBackground, @LayoutInputBackground);
    text-align: if((@LayoutInputAlign=normal), @LayoutGlobalAlign, @LayoutInputAlign);
    padding: 0;
  }
  .engine-layout-row-number {
    color: if((@LayoutInputColor=normal), @LayoutGlobalColor, @LayoutInputColor);
    background-color: if((@LayoutInputBackground=normal), @LayoutGlobalBackground, @LayoutInputBackground);
    font-size: if((@LayoutInputFontSize=normal), @LayoutGlobalFontSize, @LayoutInputFontSize);
    font-weight: @LayoutInputBold;
    padding: 0;
    text-align: if((@LayoutInputAlign=normal), @LayoutGlobalAlign, @LayoutInputAlign);
  }
  .ant-input-number {
    height: if((@LayoutInputHeight=normal), @LayoutGlobalHeight, @LayoutInputHeight);
    width: if((@LayoutInputWidth=normal), @LayoutGlobalWidth, @LayoutInputWidth);
    margin: if((@LayoutInputMargin=normal), @LayoutGlobalMargin, @LayoutInputMargin);
    border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
    border-radius: if((@LayoutInputBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutInputBorderRadius);
    box-sizing: border-box;
    &-input-wrap {
      height: 100%;
      box-sizing: border-box;
    }
    &:hover {
      border-color: @LayoutInputHoverBorderColor;
    }
    &-handler-wrap {
      border-left: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
    }
    &-handler-down {
      border-top: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
      &-inner {
        color: @LayoutInputIconColor;
      }
    }
    &-handler-up {
      &-inner {
        color: @LayoutInputIconColor;
      }
    }
    &-handler:hover {
      .ant-input-number-handler-down-inner,
      .ant-input-number-handler-up-inner {
        color: @LayoutThemeColor;
      }
    }
    &-focused,
    &:active,
    &:focus {
      box-shadow: @LayoutInputBoxShadow;
    }
    .ant-input-number-input {
      box-sizing: border-box;
      padding: if((@LayoutInputPadding=normal), @LayoutGlobalPadding, @LayoutInputPadding);
      line-height: if((@LayoutInputLineHeight=normal), @LayoutGlobalHeight, @LayoutInputLineHeight);
      height: inherit;
      width: 100%;
      color: inherit;
    }
  }
  .engine-layout-row-preread {
    color: if((@LayoutInputColor=normal), @LayoutGlobalColor, @LayoutInputColor);
    background-color: if((@LayoutInputBackground=normal), @LayoutGlobalBackground, @LayoutInputBackground);
    font-size: if((@LayoutInputFontSize=normal), @LayoutGlobalFontSize, @LayoutInputFontSize);
    font-weight: @LayoutInputBold;
    padding: 0;
    text-align: if((@LayoutInputAlign=normal), @LayoutGlobalAlign, @LayoutInputAlign);
    .engine-preread {
      width: if((@LayoutInputWidth=normal), @LayoutGlobalWidth, @LayoutInputWidth);
      height: if((@LayoutInputHeight=normal), @LayoutGlobalHeight, @LayoutInputHeight);
      background-color: #eee;
      .ant-input-group-wrapper {
        width: 100%;
        height: 100%;
      }
      .ant-input-wrapper {
        width: 100%;
        height: 100%;
      }
      .ant-input-group-addon {
        height: 100%;
        border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
        border-radius: if((@LayoutInputBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutInputBorderRadius);
        border-left: 0;
        box-shadow: @LayoutInputBoxShadow;
      }
      i.fa {
        color: #ccc;
      }
    }
  }
  .engine-layout-row-date {
    font-size: if((@LayoutCalendarFontSize=normal), @LayoutGlobalFontSize, @LayoutCalendarFontSize);
    font-weight: @LayoutCalendarBold;
    color: if((@LayoutCalendarColor=normal), @LayoutGlobalColor, @LayoutCalendarColor);
    background-color: if((@LayoutCalendarBackground=normal), @LayoutGlobalBackground, @LayoutCalendarBackground);
    padding: 0;
    text-align: if((@LayoutCalendarAlign=normal), @LayoutGlobalAlign, @LayoutCalendarAlign);
  }
  .ant-calendar-picker {
    width: 100%;
    &-icon {
      color: @LayoutCalendarIconColor;
    }
    &-clear {
      color: @LayoutCalendarIconColor;
    }
    &-input {
      padding: if((@LayoutCalendarPadding=normal), @LayoutGlobalPadding, @LayoutCalendarPadding);
      height: if((@LayoutCalendarHeight=normal), @LayoutGlobalHeight, @LayoutCalendarHeight);
      line-height: if((@LayoutCalendarLineHeight=normal), @LayoutGlobalHeight, @LayoutCalendarLineHeight);
      width: if((@LayoutCalendarWidth=normal), @LayoutGlobalWidth, @LayoutCalendarWidth);
      margin: if((@LayoutCalendarMargin=normal), @LayoutGlobalMargin, @LayoutCalendarMargin);
      border: if((@LayoutCalendarBorder=normal), @LayoutGlobalBorder, @LayoutCalendarBorder);
      border-radius: if((@LayoutCalendarBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutCalendarBorderRadius);
      &:active,
      &:focus {
        box-shadow: @LayoutCalendarBoxShadow;
      }
      &:hover {
        border-color: @LayoutCalendarHoverBorderColor;
      }
    }
  }
  .ant-calendar-picker:hover .ant-calendar-picker-input:not(.ant-input-disabled) {
    border-color: @LayoutCalendarHoverBorderColor;
  }
  .engine-layout-row-select {
    font-size: if((@LayoutSelectFontSize=normal), @LayoutGlobalFontSize, @LayoutSelectFontSize);
    font-weight: @LayoutSelectBold;
    color: if((@LayoutSelectColor=normal), @LayoutGlobalColor, @LayoutSelectColor);
    background-color: if((@LayoutSelectBackground=normal), @LayoutGlobalBackground, @LayoutSelectBackground);
    padding: 0;
    text-align: if((@LayoutSelectAlign=normal), @LayoutGlobalAlign, @LayoutSelectAlign);
    .engine-select {
      width: 100%;
    }
    .ant-select {
      width: 100%;
    }
  }
  .ant-select {
    &-selection {
      height: if((@LayoutSelectHeight=normal), @LayoutGlobalHeight, @LayoutSelectHeight);
      width: if((@LayoutSelectWidth=normal), @LayoutGlobalWidth, @LayoutSelectWidth);
      padding: if((@LayoutSelectPadding=normal), @LayoutGlobalPadding, @LayoutSelectPadding);
      margin: if((@LayoutSelectMargin=normal), @LayoutGlobalMargin, @LayoutSelectMargin);
      border: if((@LayoutSelectBorder=normal), @LayoutGlobalBorder, @LayoutSelectBorder);
      border-radius: if((@LayoutSelectBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutSelectBorderRadius);
      &:active,
      &:focus {
        box-shadow: @LayoutSelectBoxShadow;
      }
      &:hover {
        border-color: @LayoutSelectHoverBorderColor;
      }
    }
    &-arrow {
      color: @LayoutSelectIconColor;
      svg {
        background-image: none;
      }
    }
    &-selection__rendered {
      margin-left: 0;
      margin-right: 0;
      line-height: if((@LayoutSelectLineHeight=normal), @LayoutGlobalHeight, @LayoutSelectLineHeight);
    }
  }
  .engine-layout-button-group {
    position: if((@LayoutButtonGroupIsPosition=true), @LayoutButtonGroupPosition, unset);
    top: if((@LayoutButtonGroupIsPosition=true), @LayoutButtonGroupTop, unset);
    bottom: if((@LayoutButtonGroupIsPosition=true), @LayoutButtonGroupBottom, unset);
    height: if((@LayoutButtonGroupHeight=normal), auto, @LayoutButtonGroupHeight);
    border: if((@LayoutButtonGroupBorder=normal), 0, @LayoutButtonGroupBorder);
    padding: if((@LayoutButtonGroupPadding=normal), 0, @LayoutButtonGroupPadding);
    background-color: if((@LayoutButtonGroupBackground=normal), @LayoutGlobalBackground, @LayoutButtonGroupBackground);
    z-index: 9999;
    .btn-group-align(@LayoutButtonGroupAlign, @LayoutButtonGroupItemWidth);
  }
  .engine-layout-row-button {
    font-size: if((@LayoutButtonFontSize=normal), @LayoutGlobalFontSize, @LayoutButtonFontSize);
    color: if((@LayoutButtonColor=normal), @LayoutGlobalColor, @LayoutButtonColor);
    text-align: center;
    .am-button{
      height: 42px;
      font-size: 17px;
      background-color: #3399ff;
      .am-button-icon{
        display: none;
      }
    }
    .ant-btn {
      padding: if((@LayoutButtonPadding=normal), @LayoutGlobalPadding, @LayoutButtonPadding);
      line-height: if((@LayoutButtonLineHeight=normal), @LayoutGlobalHeight, @LayoutButtonLineHeight);
      margin: if((@LayoutButtonMargin=normal), @LayoutGlobalMargin, @LayoutButtonMargin);
      height: if((@LayoutButtonHeight=normal), @LayoutGlobalHeight, @LayoutButtonHeight);
      border-radius: @LayoutGlobalBorderRadius;
      background: if((@LayoutButtonBackground=normal), @LayoutGlobalBackground, @LayoutButtonBackground);
      border-color: if((@LayoutButtonBorderColor=normal), @LayoutGlobalBackground, @LayoutButtonBorderColor);
      box-shadow: unset;
      i.anticon {
        color: if((@LayoutButtonIconColor=normal), @LayoutButtonColor, @LayoutButtonIconColor);
      }
      &:hover,
      &:focus {
        background: if((@LayoutButtonHoverBackground=normal), @LayoutGlobalBackground, @LayoutButtonHoverBackground);
        border-color: if((@LayoutButtonHoverBorderColor=normal), @LayoutGlobalBackground, @LayoutButtonHoverBorderColor);
        font-size: if((@LayoutButtonHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutButtonHoverFontSize)}
    }
    .ant-btn.ant-btn-primary {
      color: if((@LayoutPrimaryButtonColor=normal), @LayoutThemeColor, @LayoutPrimaryButtonColor);
      background: if((@LayoutPrimaryButtonBackground=normal), @LayoutThemeColor, @LayoutPrimaryButtonBackground);
      border-color: if((@LayoutPrimaryButtonBorderColor=normal), @LayoutThemeColor, @LayoutPrimaryButtonBorderColor);
      i.anticon {
        color: if((@LayoutPrimaryButtonIconColor=normal), @LayoutButtonColor, @LayoutPrimaryButtonIconColor);
      }
      &:hover,
      &:focus {
        background: if((@LayoutPrimaryButtonHoverBackground=normal), @LayoutGlobalBackground, @LayoutPrimaryButtonHoverBackground);
        border-color: if((@LayoutPrimaryButtonHoverBorderColor=normal), @LayoutGlobalBackground, @LayoutPrimaryButtonHoverBorderColor);
        font-size: if((@LayoutPrimaryButtonHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutPrimaryButtonHoverFontSize)}
    }
    // 自定义按钮样式
    // 针对自定义按钮样式的单独处理 自定义按钮洋河要求与表格按钮效果一致
    .engine-customer-btn {
      color: if((@LayoutTableBtnColor=normal), @LayoutGlobalColor, @LayoutTableBtnColor)!important;
      background: if((@LayoutTableBtnBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnBackground);
      border-color: if((@LayoutTableBtnBorderColor=normal), @LayoutGlobalBackground, @LayoutTableBtnBorderColor);
      font-size: if((@LayoutButtonFontSize=normal), @LayoutGlobalFontSize, @LayoutButtonFontSize);
      height: if((@LayoutTableBtnHeight=normal), @LayoutGlobalHeight, @LayoutTableBtnHeight);
      width: if((@LayoutButtonWidth=normal), @LayoutGlobalWidth, @LayoutButtonWidth);
      border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
      border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
      &:hover,
      &:focus {
        background: if((@LayoutTableBtnBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnBackground);
        border-color: if((@LayoutTableBtnBorderColor=normal), @LayoutGlobalBackground, @LayoutTableBtnBorderColor);
        border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
      }
      > span {
        margin-left: 0px !important;
      }
    }
  }
  .engine-layout-row-upload {
    color: inherit;
    font-size: inherit;
    font-weight: inherit;
    padding: 0;
    background-color: inherit;
    .engine-mobile-upload{
      .engine-mobile-upload-uploading{
        position: fixed;
        top:0;
        left:0;
        bottom:0;
        right: 0;
        text-align: center;
        background-color: #6b696966;
        z-index: 2000;
        span{
          margin-top: 50%;
          display: inline-block;
          background: #2d2c2c;
          color: #d8d4d4;
          padding: 0px 25px;
          font-size: 16px;
        }
      }
      .engine-mobile-image-preview{
        position: fixed;
        top:0;
        left:0;
        bottom:0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.4);
        z-index: 2000;
        img{
          width:auto;
          height:auto;
          margin: 0 auto 0 auto;
          display: block;
        }
        &-close{
          position: fixed;
          top:0;
          right:0;
          width: 40px;
          height: 40px;
          text-align: center;
          line-height: 40px;
          z-index: 2001;
          background-color: rgba(68, 67, 67, 0.57);;
          color: #fff;
          display: inline-block;
        }
      }
    }
  }
  .engine-file {
    width: 100%;
    text-align: inherit;
    height: inherit;
    .ant-upload-list {
      // border:solid 1px #d9d9d9;
      .ant-upload-list-item-info {

      }
      .ant-upload-list-item {
        color: if((@LayoutFileListColor=normal), @LayoutGlobalColor, @LayoutFileListColor);
        font-size: if((@LayoutFileListFontSize=normal), @LayoutGlobalFontSize, @LayoutFileListFontSize);
        font-weight: @LayoutFileListFontWeight;
        padding: if((@LayoutFileListPadding=normal), @LayoutGlobalPadding, @LayoutFileListPadding);
        margin: if((@LayoutFileListMargin=normal), @LayoutGlobalMargin, @LayoutFileListMargin);
        width: @LayoutFileListWidth;
        height: @LayoutFileListHeight;
        .anticon-close, .fa-download {
          opacity: 1;
          top: 5px;
          color: inherit;
          font-size: inherit !important;
        }
        &:hover {
          background-color: if((@LayoutFileListHoverBgColor=normal), @LayoutGlobalBgColor, @LayoutFileListHoverBgColor)}
      }
    }
    .ant-upload {
      font-size: inherit;
      border-radius: @LayoutGlobalBorderRadius;
      .ant-btn {
        font-size: inherit;
        margin: 0;
        border: 1px solid #d9d9d9;
        border-radius: 0;
      }
    }
  }
  //PicUpload上传控件样式
  .engine-previewimage {
    padding: @LayoutPicUploadPadding;
    // margin: @LayoutPicUploadMargin;
    .ant-upload.ant-upload-select-picture-card {
      span {
        color: if((@LayoutPicUploadColor=normal), @LayoutGlobalColor, @LayoutPicUploadColor);
        font-size: if((@LayoutPicUploadFontSize=normal), @LayoutGlobalFontSize, @LayoutPicUploadFontSize);
        font-weight: @LayoutPicUploadFontWeight;
      }
      background: @LayoutPicUploadBgColor;
      height: @LayoutPicUploadHeight;
      width: @LayoutPicUploadWidth;
      border: @LayoutPicUploadBorder;
      border-radius: if((@LayoutPicUploadBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutPicUploadBorderRadius);
      &:hover {
        border: @LayoutPicUploadHoverBorder;
        background: @LayoutPicUploadHoverBgColor;
      }
    }
    .ant-upload-list-picture-card .ant-upload-list-item {
      height: @LayoutPicItemHeight;
      width: @LayoutPicItemWidth;
      margin: @LayoutPicItemMargin;
      padding: @LayoutPicItemPadding;
      border: @LayoutPicItemBorder;
      border-radius: if((@LayoutPicItemBorderRadius), @LayoutGlobalBorderRadius, @LayoutPicItemBorderRadius);
      &:hover {
        border: @LayoutPicItemHoverBorder
      }
    }
  }
  .engine-layout-row-checkbox {
    color: if((@LayoutCheckBoxColor=normal), @LayoutGlobalColor, @LayoutCheckBoxColor);
    font-size: if((@LayoutCheckBoxFontSize=normal), @LayoutGlobalFontSize, @LayoutCheckBoxFontSize);
    font-weight: @LayoutCheckBoxFontWeight;
  }
  .ant-checkbox-group {
    height: if((@LayoutCheckBoxHeight=normal), @LayoutGlobalHeight, @LayoutCheckBoxHeight);
    margin: @LayoutCheckBoxMargin;
    .ant-checkbox-inner {
      border-color: @LayoutCheckBoxDefaultColor;
    }
    .ant-checkbox-checked .ant-checkbox-inner {
      background-color: if((@LayoutCheckBoxSelectColor=normal), @LayoutThemeColor, @LayoutCheckBoxSelectColor);
      border-color: if((@LayoutCheckBoxSelectColor=normal), @LayoutThemeColor, @LayoutCheckBoxSelectColor);
    }
    .ant-checkbox-wrapper:hover .ant-checkbox-inner,
    .ant-checkbox:hover .ant-checkbox-inner,
    .ant-checkbox-input:focus + .ant-checkbox-inner {
      border-color: if((@LayoutCheckBoxSelectColor=normal), @LayoutThemeColor, @LayoutCheckBoxSelectColor);
    }
  }
  .engine-layout-row-radio {
    color: if((@LayoutRadioColor=normal), @LayoutGlobalColor, @LayoutRadioColor);
    font-size: if((@LayoutRadioFontSize=normal), @LayoutGlobalFontSize, @LayoutRadioFontSize);
    font-weight: @LayoutRadioFontWeight;
  }
  .ant-radio-wrapper {
    height: if((@LayoutRadioHeight=normal), @LayoutGlobalHeight, @LayoutRadioHeight);
    margin: @LayoutRadioMargin;
    .ant-radio-inner {
      border-color: @LayoutRadioDefaultColor
    }
    &:hover {
      .ant-radio-inner {
        border-color: if((@LayoutRadioSelectColor=normal), @LayoutThemeColor, @LayoutRadioSelectColor)}
    }
    .ant-radio-checked .ant-radio-inner {
      border-color: if((@LayoutRadioSelectColor=normal), @LayoutThemeColor, @LayoutRadioSelectColor);
    }
    .ant-radio-inner:after {
      background-color: if((@LayoutRadioSelectColor=normal), @LayoutThemeColor, @LayoutRadioSelectColor);
    }
  }
  .engine-layout-row-transfer {
    color: if((@LayoutTransferColor=normal), @LayoutGlobalColor, @LayoutTransferColor);
    font-size: if((@LayoutTransferFontSize=normal), @LayoutGlobalFontSize, @LayoutTransferFontSize);
    font-weight: @LayoutTransferFontWeight;
    padding: 0;
  }
  .ant-transfer {
    li {
      height: if((@LayoutTransferItemHeight=normal), @LayoutGlobalHeight, @LayoutTransferItemHeight);
      line-height: if((@LayoutTransferItemHeight=normal), @LayoutGlobalHeight, @LayoutTransferItemHeight);
      margin: if((@LayoutTransferItemMargin=normal), @LayoutGlobalMargin, @LayoutTransferItemMargin);
      padding: if((@LayoutTransferItemPadding=normal), @LayoutGlobalPadding, @LayoutTransferItemPadding);
    }
    .ant-transfer-list-content {
      text-align: @LayoutTransferTextAlign;
    }
    .ant-transfer-list {
      padding: @LayoutTransferPadding;
      border: @LayoutTransferBorder;
      border-radius: @LayoutTransferBorderRadius;
    }
    .anticon-search {
      color: if((@LayoutTransferIconColor=normal), @LayoutGlobalColor, @LayoutTransferIconColor)}
    .ant-transfer-list-header {
      background: if((@LayoutTransferTitleBgColor=normal), @LayoutGlobalBackground, @LayoutTransferTitleBgColor);
      color: if((@LayoutTransferTitleColor=normal), @LayoutGlobalColor, @LayoutTransferTitleColor)}
    .ant-btn.ant-btn-primary {
      color: #ffffff;
      background: @LayoutThemeColor;
      border-color: @LayoutThemeColor;
      line-height: 3rem;
      width: 3rem;
    }
  }
  .engine-transfer {
    height: @LayoutTransferHeight;
    margin: @LayoutTransferMargin;
  }
  .engine-layout-row-table {
    text-align: if((@LayoutTableAlign=normal), @LayoutGlobalAlign, @LayoutTableAlign);
    color: if((@LayoutTableColor=normal), @LayoutGlobalColor, @LayoutTableColor);
    font-size: if((@LayoutTableFontSize=normal), @LayoutGlobalFontSize, @LayoutTableFontSize);
    font-weight: @LayoutTableFontWeight;
    padding: 0;
    background-color: inherit;
    .engine-mobile-edittable{
      .engine-mobile-edittable-buttons{
        height: 30px;
        line-height: 30px;
        font-size: 14px;
        margin: 8px auto;
        width: 80%;
        background-color: #3399ff;
      }
    }
    .engine-table {
      margin: if((@LayoutTableMargin=normal), @LayoutGlobalMargin, @LayoutTableMargin);
      .ant-table {
        font-size: inherit;
        color: inherit;
      }
      .ant-table-placeholder {
        min-height: if((@LayoutTableMinHeight=normal), 20rem, @LayoutTableMinHeight)}
      table {
        border-left: @LayoutTableBorder;
        border-top: @LayoutTableBorder;
        thead {
          tr {
            line-height: if((@LayoutTableHeadHeight=normal), none, @LayoutTableHeadHeight);
            th {
              color: if((@LayoutTableHeadColor=normal), @LayoutGlobalColor, @LayoutTableHeadColor);
              font-size: if((@LayoutTableHeadFontSize=normal), @LayoutGlobalFontSize, @LayoutTableHeadFontSize);
              font-weight: @LayoutTableHeadFontWeight;
              background-color: if((@LayoutTableHeadBgColor=normal), @LayoutGlobalBackground, @LayoutTableHeadBgColor);
              padding: if((@LayoutTablePadding=normal), @LayoutGlobalPadding, @LayoutTablePadding);
              border-bottom: @LayoutTableBorder;
              border-right: @LayoutTableBorder;
              text-align: if((@LayoutTableThAlign=normal), 'center', @LayoutTableThAlign);
            }
          }
        }
        tbody {
          tr {
            line-height: if((@LayoutTableHeight=normal), none, @LayoutTableHeight);
            text-align: if((@LayoutTableTdAlign=normal), center, @LayoutTableTdAlign);
            &:hover:not(.ant-table-expanded-row) > td {
              background-color: if((@LayoutTableHoverBgColor=normal), @LayoutGlobalBgColor, @LayoutTableHoverBgColor)}
            td {
              padding: if((@LayoutTablePadding=normal), @LayoutGlobalPadding, @LayoutTablePadding);
              border-bottom: @LayoutTableBorder;
              border-right: @LayoutTableBorder;
              input {
                text-align: left;
              }
              button.ant-btn {
                padding: if((@LayoutTableThBtnPadding=normal), @LayoutGlobalPadding, @LayoutTableThBtnPadding);
                font-size: if((@LayoutTableThBtnFontSize=normal), @LayoutGlobalFontSize, @LayoutTableThBtnFontSize);
                background: if((@LayoutTableThBtnBackground=normal), transparent, @LayoutTableThBtnBackground);
                color: if((@LayoutTableThBtnColor=normal), @LayoutGlobalColor, @LayoutTableThBtnColor);
                margin: if((@LayoutTableThBtnMargin=normal), 0 0.5rem 0 0, @LayoutTableThBtnMargin);
                height: if((@LayoutTableThBtnHeight=normal), @LayoutGlobalHeight, @LayoutTableThBtnHeight);
                border: if((@LayoutTableThBtnBorder=normal), @LayoutGlobalBorder, @LayoutTableThBtnBorder);
                &:hover {
                  font-size: if((@LayoutTableThBtnHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutTableThBtnHoverFontSize);
                  color: if((@LayoutTableThBtnFontHoverColor=normal), @LayoutGlobalColor, @LayoutTableThBtnFontHoverColor);
                  background-color: if((@LayoutTableThBtnHoverBackground=normal), transparent, @LayoutTableThBtnHoverBackground);
                  border: if((@LayoutTableThBtnHoverBorder=normal), @LayoutGlobalBorder, @LayoutTableThBtnHoverBorder);
                }
              }
            }
            &:nth-child(odd) {
              background-color: if((@LayoutTableOddRowBgColor=normal), @LayoutGlobalBackground, @LayoutTableOddRowBgColor)}
            &:nth-child(even) {
              background-color: if((@LayoutTableEvenRowBgColor=normal), @LayoutGlobalBackground, @LayoutTableEvenRowBgColor)}
          }
        }
      }
      & > .ant-btn {
        line-height: if((@LayoutTableBtnLineHeight=normal), @LayoutGlobalHeight, @LayoutTableBtnLineHeight);
        padding: if((@LayoutTableBtnPadding=normal), @LayoutGlobalPadding, @LayoutTableBtnPadding);
        margin: if((@LayoutTableBtnMargin=normal), @LayoutGlobalMargin, @LayoutTableBtnMargin);
        font-size: if((@LayoutTableBtnFontSize=normal), @LayoutGlobalFontSize, @LayoutTableBtnFontSize);
        color: if((@LayoutTableBtnColor=normal), @LayoutGlobalColor, @LayoutTableBtnColor);
        height: if((@LayoutTableBtnHeight=normal), @LayoutGlobalHeight, @LayoutTableBtnHeight);
        // width: if((@LayoutTableBtnWidth=normal), @LayoutGlobalWidth, @LayoutTableBtnWidth);
        background: if((@LayoutTableBtnBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnBackground);
        border-color: if((@LayoutTableBtnBorderColor=normal), @LayoutGlobalBackground, @LayoutTableBtnBorderColor);
        box-sizing: border-box;
        &:hover,
        &:focus {
          background: if((@LayoutTableBtnHoverBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnHoverBackground);
          border-color: if((@LayoutTableBtnHoverBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnHoverBackground);
        }
      }
      & .ant-btn.ant-btn-primary {
        color: if((@LayoutTablePrimaryButtonColor=normal), @LayoutThemeColor, @LayoutTablePrimaryButtonColor);
        background: if((@LayoutTablePrimaryButtonBackground=normal), @LayoutThemeColor, @LayoutTablePrimaryButtonBackground);
        border-color: if((@LayoutTablePrimaryButtonBorderColor=normal), @LayoutThemeColor, @LayoutTablePrimaryButtonBorderColor);
        &:hover,
        &:focus {
          background: if((@LayoutTablePrimaryButtonHoverBackground=normal), @LayoutGlobalBackground, @LayoutTablePrimaryButtonHoverBackground);
          border-color: if((@LayoutTablePrimaryButtonHoverBorderColor=normal), @LayoutGlobalBackground, @LayoutTablePrimaryButtonHoverBorderColor);
        }
      }
    }
  }
  .engine-layout-row-texteditor {
    color: if((@LayoutEditorColor=normal), @LayoutGlobalColor, @LayoutEditorColor);
    font-size: if((@LayoutEditorFontSize=normal), @LayoutGlobalFontSize, @LayoutEditorFontSize);
    font-weight: @LayoutEditorFontWeight;
    padding: 0;
    background-color: inherit;
    text-align: inherit;
    .engine-texteditor {
      width: @LayoutEditorWidth;
      height: @LayoutEditorHeight;
      border: @LayoutEditorBorder;
      box-sizing: border-box;
      .rdw-editor-toolbar {
        border: none;
        border-bottom: @LayoutEditorToolBarBorderBottom;
        [class^='rdw'] {
          color: #999;
          height: 30px;
          line-height: 30px;
          &:not(.rdw-dropdown-carettoopen) {
            border: none;
          }
          &.rdw-dropdown-carettoopen {
            border-top-color: #999;
          }
          img {
            filter: contrast(0%);
          }
        }
      }
      .rdw-editor-main {
        margin-left: @LayoutEditorMianMarginLeft;
        height: @LayoutEditorMianHeight;
      }
    }
    .form-group.form-group-error {
      .rdw-editor-wrapper {
        border-color: red !important;
        border-radius: 3px;
      }
      .form-group-error-icon {
        top: 3.2rem;
        bottom: 1.4rem;
      }
    }
  }
  .engine-layout-row-slider{
    .engine-slider{
      border:solid 1px #108ee9;
      box-sizing: border-box;
      height:100px;
      -webkit-touch-callout:none;
      -webkit-user-select:none;
      -moz-user-select:none;
      -ms-user-select:none;
      user-select:none;
      *{
        -webkit-touch-callout:none;
        -webkit-user-select:none;
        -moz-user-select:none;
        -ms-user-select:none;
        user-select:none;
      }
      &-value{
        display: inline-block;
        height: 20px;
        text-align: center;
        color: #000;
        position: absolute;
        bottom: 23px;
        left: 50%;
        transform: translateX(-50%);
        > span{
          width: 100%;
          height: 20px;
          background-color: #a6d4fb;
          box-sizing: border-box;
          padding: 3px 10px;
          border-radius: 3px;
          &.warn{
            color:red;
          }
          &::before{
            border-width: 5px;
            border-style: solid;
            border-color: transparent transparent #a6d4fb transparent;
            content: ' ';
            display: inline-block;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            top: 2px;
          }
        }
      }
    }
    .am-slider{
      margin:0;
      margin-top: 17px;
      &-wrapper{
        height:70px;
        padding: 0 10px;
      }
      &-disabled{
        opacity:1;
      }
      &-rail{
        background-color:#108ee9;
        top: 20px;
        width: 100%;
      }
      &-track{
        background-color:#108ee9;
        top: 20px;
      }
      &-handle{
        width:1px;
        margin-top:-23px;
        border-radius:0;
        margin-left: -1px;
        border:0;
        height: 45px;
        border-left: 2px solid red;
      }
      &-step{
        top:19px;
        .am-slider-dot:nth-child(5n+1){
          height: 22px;
          top: -20px;
        }
        .am-slider-dot:nth-child(10n+1),.am-slider-dot:first-child{
          top:-28px;
          height:30px;
        }
      }
      &-dot{
        width:1px;
        margin-left:0;
        top:-12px;
        height: 14px;
        border:0;
        border-left:1px solid #108ee9;
        &-active{
          border-color:#108ee9;
        }
      }
      &-mark{
        top:10px;
        .am-slider-mark-text:nth-child(10n+1),.am-slider-mark-text:first-child{
          display:inline-block;
        }
        &-text{
          display:none;
          &-active{
            opacity: 1;
          }
        }

      }
    }
  }
  .engine-layout-row-modal {
    color: if((@LayoutModalColor=normal), @LayoutGlobalColor, @LayoutModalColor);
    font-size: if((@LayoutModalFontSize=normal), @LayoutGlobalFontSize, @LayoutModalFontSize);
    font-weight: @LayoutModalFontWeight;
    text-align: if((@LayoutModalTextAlign=normal),@LayoutGlobalAlign,@LayoutModalTextAlign);
    padding: 0;
    background-color: inherit;
  }
  .engine-modal {
    margin: if((@LayoutModalMargin=normal), @LayoutGlobalMargin, @LayoutModalMargin);
    border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
    height: inherit;
    &:hover {
      .ant-input-group-wrapper {
        .ant-input-suffix {
          opacity: 1;
        }
      }
    }
    .ant-input-group-wrapper {
      .ant-input {
        padding: if((@LayoutModalPadding=normal), @LayoutGlobalPadding, @LayoutModalPadding);
        border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
        border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
        height: if((@LayoutModalHeight=normal), @LayoutGlobalHeight, @LayoutModalHeight);
        width: if((@LayoutModalWidth=normal), @LayoutGlobalWidth, @LayoutModalWidth);
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        font-size: @LayoutGlobalFontSize;
      }
      .ant-input-suffix {
        transition: 0.5s all;
        opacity: 0;
        > .close {
          cursor: pointer;
        }
      }
      .ant-input-group-addon {
        border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
        border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
        border-left: 0;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        color: if((@LayoutModalColor=normal), @LayoutGlobalColor, @LayoutModalColor);
        background-color: transparent;
      }
      :hover {
        .ant-input, .ant-input-group-addon {
          border-color: @LayoutInputHoverBorderColor;
        }
      }
    }
  }
  .engine-layout-row-tabs {
    color: if((@LayoutTabsTableColor=normal), @LayoutGlobalColor, @LayoutTabsTableColor);
    font-size: if((@LayoutTabsTableFontSize=normal), @LayoutGlobalFontSize, @LayoutTabsTableFontSize)!important;
    font-weight: @LayoutTabsTableFontWeight;
    background-color: inherit;
    padding: 0;
    .ant-tabs {
      margin: if((@LayoutTabsMargin=normal), @LayoutGlobalMargin, @LayoutTabsMargin);
      .ant-tabs-tab {
        color: if((@LayoutTabsTitleColor=normal), @LayoutGlobalColor, @LayoutTabsTitleColor);
        font-size: @LayoutTabsTitleFontSize;
        font-weight: @LayoutTabsTitleFontWeight;
        &:hover {
          color: @LayoutTabsTitleSelectColor;
        }
      }
      .ant-tabs-nav .ant-tabs-tab-active {
        color: @LayoutTabsTitleSelectColor;
      }
      .ant-tabs-tabpane {
        color: if((@LayoutTabsColor=normal), @LayoutGlobalColor, @LayoutTabsColor);
        font-size: if((@LayoutTabsFontSize=normal), @LayoutGlobalFontSize, @LayoutTabsFontSize);
        font-weight: @LayoutTabsFontWeight;
      }
      table {
        text-align: @LayoutTabsTableTextAlign;
        border-left: @LayoutTabsTableBorder;
        border-top: @LayoutTabsTableBorder;
        thead {
          tr {
            line-height: if((@LayoutTabsTableHeadHeight=normal), none, @LayoutTabsTableHeadHeight);
            th {
              color: if((@LayoutTabsTableHeadColor=normal), @LayoutGlobalColor, @LayoutTabsTableHeadColor);
              font-size: if((@LayoutTabsTableHeadFontSize=normal), @LayoutGlobalFontSize, @LayoutTabsTableHeadFontSize)!important;
              font-weight: @LayoutTabsTableHeadFontWeight;
              background-color: if((@LayoutTabsTableHeadBgColor=normal), @LayoutGlobalBackground, @LayoutTabsTableHeadBgColor);
              padding: if((@LayoutTabsTablePadding=normal), @LayoutGlobalPadding, @LayoutTabsTablePadding)!important;
              border-bottom: @LayoutTabsTableBorder;
              border-right: @LayoutTabsTableBorder;
              div {
                text-align: @LayoutModalTableTextAlign;
              }
            }
          }
        }
        tbody {
          tr {
            line-height: if((@LayoutTabsTableHeight=normal), none, @LayoutTabsTableHeight);
            &:hover:not(.ant-table-expanded-row) > td {
              background-color: if((@LayoutTabsTableHoverBgColor=normal), @LayoutGlobalBgColor, @LayoutTabsTableHoverBgColor)}
            td {
              padding: if((@LayoutTabsTablePadding=normal), @LayoutGlobalPadding, @LayoutTabsTablePadding)!important;
              border-bottom: @LayoutTabsTableBorder;
              border-right: @LayoutTabsTableBorder;
            }
            &:nth-child(odd) {
              background-color: if((@LayoutTabsTableOddRowBgColor=normal), @LayoutGlobalBackground, @LayoutTabsTableOddRowBgColor)}
            &:nth-child(even) {
              background-color: if((@LayoutTabsTableEvenRowBgColor=normal), @LayoutGlobalBackground, @LayoutTabsTableEvenRowBgColor)}
          }
        }
      }
    }
  }
  .engine-text-read-only {
    // 使用集成的数据默认元素进行居中
    // line-height: 1.5;
    line-height: inherit;
    height: inherit;
    font-size: @LayoutGlobalFontSize;
    width: inherit;
    word-break: break-all;
    // 2019-08-27 处理移动端展示的时候 文档以及附件换行
    // display: flex;
    // align-items: center;
    // justify-content: flex-end;
    &[disabled] {
      background-color: inherit !important;
    }
  }
  .form-group {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    padding: 0;
    position: relative;
    .form-text {
      width: 100%;
      height: 100%;
      font-size: inherit;
      > div{
        height: 100%;
        width: inherit;
      }
      > .engine-text-read-only{
        width:90%;
      }
      .am-list{
        height: 100%;
        width: inherit;
        &-body{
          height: 100%;
        }
        &-item{
          height: 100%;
          &.engine-mobile-placeholder{
            .am-list-line {
              .am-list-extra{
                color:#bbb;
              }
            }
          }
          &.engine-muilt-placeholder{
            .am-list-line {
              .am-list-extra{
                color:#bbb;
              }
            }
          }
        }
      }
      .am-textarea-control{
        height: 100%;
        textarea{
          height: 100%;
        }
      }
      .am-list-line {
        padding-right: 0;
        flex:unset;
        width: 100%;
        .am-list-extra{
          .form-text{
            .am-list-line .am-list-extra{
              flex-basis: 90%;
            }
          }
        }
        .am-list-content{
          .engine-control-content{
            width:90%;
            white-space: pre-wrap;
          }
        }
        .am-input-control{
          flex:unset;
          flex-basis: 90%;
          .fake-input,.fake-input-placeholder{
            text-align: inherit;
          }
          .fake-input-placeholder{
            color:#bbb;
          }
          input,button, optgroup, select, textarea{
            text-align: inherit;
            font-family: unset;
            font-size:inherit;
          }
        }
        .am-list-arrow{
          margin-left: 6px;
        }
        .am-input-clear{
          margin-left: 6px;
        }
      }
      .am-input-control {
        height: 100%;
        .fake-input-container {
          height: 100%;
          line-height: 44px;
        }
        input {
          height: 100%;
        }
      }
    }
  }
  .engine-layout-row-text-content, .engine-layout-row-radio, .engine-layout-row-checkbox {
    .form-group {
      height: auto;
    }
  }
  .form-group.form-group-error {
    > .form-text {
      .ant-input,
      .ant-select-selection,
      .ant-calendar-picker-input,
      .ant-input-number {
        border-color: red;
      }
      .ant-input-group-wrapper {
        .ant-input {
          border-right: 0;
          border-color: red;
        }
        .ant-input-group-addon {
          border-color: red;
        }
      }
    }
    .form-group-error-icon {
      position: absolute;
      top: 0.3rem;
      right: 0.2rem;
      bottom: 0.3rem;
      color: red;
      background-color: #fff;
      width: 1.6rem;
      text-align: center;
      z-index: 1;
      > .anticon {
        color: inherit;
        font-size: inherit;
        position: absolute;
        right: 0;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }
  .ant-row, .ant-row-flex {
    width: 100%;
    .ant-select-selection-selected-value {
      width: 100%;
      box-sizing: border-box;
    }
    .ant-spin-nested-loading {
      width: 100%;
    }
  }
  //禁用 属性作为只读样式
  [disabled] {
    background-color: @LayoutGlobalBackground !important;
    color: @LayoutGlobalColor !important;
    cursor: default !important;
  }
  .engine-layout-text[disabled], .engine-layout-title[disabled] {
    background-color: inherit !important;
    color: inherit !important;
  }
}

//设置Modal弹窗内容样式
.engine-modalContent {
  .ant-modal-header {
    background-color: if((@LayoutModalTitleBgColor=normal), @LayoutGlobalBackground, @LayoutModalTitleBgColor);
    border-bottom: @LayoutModalTitleBorderBottom;
    .ant-modal-title {
      color: if((@LayoutModalTitleColor=normal), @LayoutGlobalColor, @LayoutModalTitleColor);
      font-size: if((@LayoutModalTitleFontSize=normal), @LayoutGlobalFontSize, @LayoutModalTitleFontSize);
      font-weight: @LayoutModalTitleFontWeight;
    }
  }
  table {
    text-align: @LayoutModalTableTextAlign;
    border-left: @LayoutModalTableBorder;
    border-top: @LayoutModalTableBorder;
    thead {
      tr {
        line-height: if((@LayoutModalTableHeadHeight=normal), none, @LayoutModalTableHeadHeight);
        th {
          color: if((@LayoutModalTableHeadColor=normal), @LayoutGlobalColor, @LayoutModalTableHeadColor);
          font-size: if((@LayoutModalTableHeadFontSize=normal), @LayoutGlobalFontSize, @LayoutModalTableHeadFontSize)!important;
          font-weight: @LayoutModalTableHeadFontWeight;
          background-color: if((@LayoutModalTableHeadBgColor=normal), @LayoutGlobalBackground, @LayoutModalTableHeadBgColor);
          padding: if((@LayoutModalTablePadding=normal), @LayoutGlobalPadding, @LayoutModalTablePadding)!important;
          border-bottom: @LayoutModalTableBorder;
          border-right: @LayoutModalTableBorder;
          div {
            text-align: @LayoutModalTableTextAlign;
          }
        }
      }
    }
    tbody {
      tr {
        line-height: if((@LayoutModalTableHeight=normal), none, @LayoutModalTableHeight);
        &:hover:not(.ant-table-expanded-row) > td {
          background-color: if((@LayoutModalTableHoverBgColor=normal), @LayoutGlobalBgColor, @LayoutModalTableHoverBgColor)}
        td {
          color: if((@LayoutModalTableColor=normal), @LayoutGlobalColor, @LayoutModalTableColor);
          font-size: if((@LayoutModalTableFontSize=normal), @LayoutGlobalFontSize, @LayoutModalTableFontSize)!important;
          font-weight: @LayoutModalTableFontWeight;
          padding: if((@LayoutModalTablePadding=normal), @LayoutGlobalPadding, @LayoutModalTablePadding)!important;
          border-bottom: @LayoutTableBorder;
          border-right: @LayoutTableBorder;
        }
        &:nth-child(odd) {
          background-color: if((@LayoutModalTableOddRowBgColor=normal), @LayoutGlobalBackground, @LayoutModalTableOddRowBgColor)}
        &:nth-child(even) {
          background-color: if((@LayoutModalTableEvenRowBgColor=normal), @LayoutGlobalBackground, @LayoutModalTableEvenRowBgColor)}
      }
    }
  }
}

//布局控件 继承样式
.control-extend-style() {
  font-size: inherit;
  color: inherit;
  font-weight: inherit;
  font-family: inherit;
  text-align: inherit;
}

//清除布局控件内容的样式，继承单元格样式
.engine-layout.engine-mobile-default {
  .ant-row, .ant-row-flex {
    > div {
      margin-top: 0;
      margin-bottom: 0;
      &.engine-layout-col-empty {
        margin-top: 0;
        margin-bottom: 0;
      }
    }
    &.engine-layout-button-group {
      > div {
        margin-top: 0;
        margin-bottom: 0;
      }
    }
  }
  .ant-row > div, .ant-row-flex > div {
    .engine-text-read-only{
      .control-extend-style();
    }
    .am-list-line{
      .am-list-extra{
        .control-extend-style();
      }
      .am-list-content{
        .control-extend-style();
      }
    }
    .am-list-content{
      .engine-control-content{
        .control-extend-style();
      }
    }
    .am-input-control{
      .control-extend-style();
      input{
        .control-extend-style();
      }
      .fake-input,.fake-input-placeholder{
        .control-extend-style();
      }
    }
    .ant-input {
      .control-extend-style();
    }
    .engine-select, .ant-select, .ant-select-selection {
      .control-extend-style();
    }
    .ant-input-number, .ant-input-number-input {
      .control-extend-style();
    }
    .ant-calendar-picker {
      .control-extend-style();
    }
    .ant-btn, .ant-btn.ant-btn-primary {
      font-size: inherit;
      color: inherit;
      font-weight: inherit;
      font-family: inherit;
      text-align: inherit;
    }
    .engine-layout-text, .engine-layout-title {
      .control-extend-style();
    }
    .ant-input-group-wrapper, .ant-input-group {
      .control-extend-style();
    }
    .ant-radio-group, .ant-radio-wrapper, .ant-radio {
      .control-extend-style();
    }
    .ant-checkbox-group, .ant-checkbox-wrapper, .ant-checkbox {
      .control-extend-style();
    }
    .engine-table {
      .control-extend-style();
      .ant-table-wrapper {
        .control-extend-style();
      }
      .ant-select {
        .control-extend-style();
        .ant-select-selection__rendered {
          .control-extend-style();
        }
      }
    }
    //富文本编辑器
    .engine-texteditor, .engine-texteditor .w-e-toolbar,
    .engine-texteditor .w-e-text-container,
    .engine-texteditor .w-e-text-container .w-e-text {
      .control-extend-style()
    }
    textarea{
      .control-extend-style()
    }
    .engine-texteditor{
      padding-left:0;
      padding-right: 0;
      border:0;
    }
  }
}

// modaltransfer样式
.engine-modaltransfer {
  margin: if((@LayoutModalMargin=normal), @LayoutGlobalMargin, @LayoutModalMargin);
  border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
  width: inherit;
  &:hover {
    .ant-input-group-wrapper {
      .ant-input-suffix {
        opacity: 1;
      }
    }
  }
  .ant-input-group-wrapper {
    .ant-input {
      padding: if((@LayoutModalPadding=normal), @LayoutGlobalPadding, @LayoutModalPadding);
      border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
      border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
      height: if((@LayoutModalHeight=normal), @LayoutGlobalHeight, @LayoutModalHeight);
      width: if((@LayoutModalWidth=normal), @LayoutGlobalWidth, @LayoutModalWidth);
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .ant-input-suffix {
      transition: 0.5s all;
      opacity: 0;
      > .close {
        cursor: pointer;
      }
    }
    .ant-input-group-addon {
      border-radius: if((@LayoutInputBorderRadius=normal), 0, @LayoutInputBorderRadius);
      border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
      border-left: 0;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      color: if((@LayoutModalColor=normal), @LayoutGlobalColor, @LayoutModalColor);
      background-color: transparent;
    }
    :hover {
      .ant-input, .ant-input-group-addon {
        border-color: @LayoutInputHoverBorderColor;
      }
    }
  }
}

// 穿梭弹窗样式
.engine-control-modaltransfer {
  width: if((@LayoutControlModalTransferWidth=normal), auto, @LayoutControlModalTransferWidth)!important;
  height: auto !important;
  .Common-search-input {
    width: 100%;
  }
  .ant-modal-content {
    .ant-modal-close {
      &-x {
        height: if((@LayoutControlModalHeaderHeight=normal), 4rem, @LayoutControlModalHeaderHeight);
        line-height: if((@LayoutControlModalHeaderHeight=normal), 4rem, @LayoutControlModalHeaderHeight);
        color: if((@LayoutControlModalHeaderColor=normal), @LayoutGlobalColor, @LayoutControlModalHeaderColor);
      }
    }
    .ant-modal-header {
      height: if((@LayoutControlModalHeaderHeight=normal), 4rem, @LayoutControlModalHeaderHeight);
      line-height: if((@LayoutControlModalHeaderHeight=normal), 4rem, @LayoutControlModalHeaderHeight);
      font-size: if((@LayoutControlModalHeaderFontSize=normal), @LayoutGlobalFontSize, @LayoutControlModalHeaderFontSize);
      color: if((@LayoutControlModalHeaderColor=normal), @LayoutGlobalColor, @LayoutControlModalHeaderColor);
      background-color: if((@LayoutControlModalHeaderBackground=normal), @LayoutGlobalBackground, @LayoutControlModalHeaderBackground);
      padding: if((@LayoutControlModalHeaderPadding=normal), @LayoutGlobalPadding, @LayoutControlModalHeaderPadding);
      border-radius: if((@LayoutControlModalHeaderBorderRadius=normal), 0, @LayoutControlModalHeaderBorderRadius);
      .ant-modal-title {
        height: inherit;
        color: inherit;
        line-height: unset;
      }
    }
    .ant-modal-body {
      padding: if((@LayoutControlModalBodyPadding=normal), @LayoutGlobalPadding, @LayoutControlModalBodyPadding);
      font-size: if((@LayoutControlModalBodyFontSize=normal), @LayoutGlobalFontSize, @LayoutControlModalBodyFontSize);
      color: if((@LayoutControlModalBodyColor=normal), @LayoutGlobalColor, @LayoutControlModalBodyColor);
      background-color: if((@LayoutControlModalBodyBackground=normal), @LayoutGlobalBackground, @LayoutControlModalBodyBackground);
    }
    .ant-modal-footer {
      > div {
        display: inline-block;
      }
      border-radius: if((@LayoutControlModalFooterBorderRadius=normal), 0, @LayoutControlModalFooterBorderRadius);
      padding: if((@LayoutControlModalFooterPadding=normal), @LayoutGlobalPadding, @LayoutControlModalFooterPadding);
      text-align: if((@LayoutControlModalFooterAlign=normal), @LayoutGlobalAlign, @LayoutControlModalFooterAlign);
      .ant-btn {
        border: if((@LayoutControlModalFooterBtnBorder=normal), @LayoutGlobalBorder, @LayoutControlModalFooterBtnBorder);
        margin: if((@LayoutControlModalFooterBtnMargin=normal), @LayoutGlobalMargin, @LayoutControlModalFooterBtnMargin);
        height: if((@LayoutControlModalFooterBtnHeight=normal), @LayoutGlobalHeight, @LayoutControlModalFooterBtnHeight);
        line-height: if((@LayoutControlModalFooterBtnLineHeight=normal), @LayoutGlobalHeight, @LayoutControlModalFooterBtnLineHeight);
        background-color: if((@LayoutControlModalFooterBtnBackground=normal), @LayoutGlobalBackground, @LayoutControlModalFooterBtnBackground);
        font-size: if((@LayoutControlModalFooterBtnFontSize=normal), @LayoutGlobalFontSize, @LayoutControlModalFooterBtnFontSize);
        padding: if((@LayoutControlModalFooterBtnPadding=normal), @LayoutGlobalPadding, @LayoutControlModalFooterBtnPadding);
        border-radius: if((@LayoutControlModalFooterBtnBorderRadius=normal), 0, @LayoutControlModalFooterBtnBorderRadius);
        color: if((@LayoutControlModalFooterBtnColor=normal), @LayoutGlobalColor, @LayoutControlModalFooterBtnColor);
        &:hover {
          border: if((@LayoutControlModalFooterBtnHoverBorder=normal), @LayoutGlobalBorder, @LayoutControlModalFooterBtnHoverBorder);
          background-color: if((@LayoutControlModalFooterBtnHoverBackground=normal), @LayoutGlobalBackground, @LayoutControlModalFooterBtnHoverBackground);
          font-size: if((@LayoutControlModalFooterBtnHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutControlModalFooterBtnHoverFontSize);
          color: if((@LayoutControlModalFooterBtnHoverColor=normal), @LayoutGlobalColor, @LayoutControlModalFooterBtnHoverColor);
        }
      }
      .ant-btn-primary {
        border: if((@LayoutControlModalFooterPrimaryBtnBorder=normal), @LayoutGlobalBorder, @LayoutControlModalFooterPrimaryBtnBorder);
        background-color: if((@LayoutControlModalFooterPrimaryBtnBackground=normal), @LayoutGlobalBackground, @LayoutControlModalFooterPrimaryBtnBackground);
        color: if((@LayoutControlModalFooterPrimaryBtnColor=normal), @LayoutGlobalColor, @LayoutControlModalFooterPrimaryBtnColor);
        &:hover {
          border: if((@LayoutControlModalFooterPrimaryBtnHoverBorder=normal), @LayoutGlobalBorder, @LayoutControlModalFooterPrimaryBtnHoverBorder);
          background-color: if((@LayoutControlModalFooterPrimaryBtnHoverBackground=normal), @LayoutGlobalBackground, @LayoutControlModalFooterPrimaryBtnHoverBackground);
          font-size: if((@LayoutControlModalFooterPrimaryBtnHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutControlModalFooterPrimaryBtnHoverFontSize);
          color: if((@LayoutControlModalFooterPrimaryBtnHoverColor=normal), @LayoutGlobalColor, @LayoutControlModalFooterPrimaryBtnHoverColor);
        }
      }
    }
    .Common-search {
      padding: if((@LayoutControlModalSearchPadding=normal), @LayoutGlobalPadding, @LayoutControlModalSearchPadding);
      margin: if((@LayoutControlModalSearchMargin=normal), @LayoutGlobalMargin, @LayoutControlModalSearchMargin);
      font-size: inherit;
      color: inherit;
      .form-panel {
        .form-group {
          margin: 0;
          height: if((@LayoutControlModalSearchFormHeight=normal), @LayoutGlobalHeight, @LayoutControlModalSearchFormHeight);
          width: 100%;
          .form-text {
            padding-right: 0;
          }
        }
      }
      .ant-btn {
        border-width: 1px;
        border-style: solid;
        border-color: if((@LayoutTableBtnBorderColor=normal), transparent, @LayoutTableBtnBorderColor);
        margin: if((@LayoutTableBtnMargin=normal), @LayoutGlobalMargin, @LayoutTableBtnMargin);
        height: if((@LayoutTableBtnHeight=normal), @LayoutGlobalHeight, @LayoutTableBtnHeight);
        line-height: if((@LayoutTableBtnLineHeight=normal), @LayoutGlobalHeight, @LayoutTableBtnLineHeight);
        background-color: if((@LayoutTableBtnBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnBackground);
        font-size: if((@LayoutTableBtnFontSize=normal), @LayoutGlobalFontSize, @LayoutTableBtnFontSize);
        padding: if((@LayoutTableBtnPadding=normal), @LayoutGlobalPadding, @LayoutTableBtnPadding);
        border-radius: if((@LayoutTableBtnBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutTableBtnBorderRadius);
        color: if((@LayoutTableBtnColor=normal), @LayoutGlobalColor, @LayoutTableBtnColor);
        &:hover {
          border-color: if((@LayoutTableBtnHoverBorderColor=normal), @LayoutGlobalColor, @LayoutTableBtnHoverBorderColor);
          background-color: if((@LayoutTableBtnHoverBackground=normal), @LayoutGlobalBackground, @LayoutTableBtnHoverBackground);
          font-size: if((@LayoutTableBtnHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutTableBtnHoverFontSize);
          color: if((@LayoutTableBtnHoverColor=normal), @LayoutGlobalColor, @LayoutTableBtnHoverColor);
        }
      }
      .ant-btn-primary {
        border-color: if((@LayoutTablePrimaryButtonBorderColor=normal), @LayoutGlobalColor, @LayoutTablePrimaryButtonBorderColor);
        background-color: if((@LayoutTablePrimaryButtonBackground=normal), @LayoutGlobalBackground, @LayoutTablePrimaryButtonBackground);
        color: if((@LayoutTablePrimaryButtonColor=normal), @LayoutGlobalColor, @LayoutTablePrimaryButtonColor);
        &:hover {
          border-color: if((@LayoutTablePrimaryButtonHoverBorderColor=normal), @LayoutGlobalColor, @LayoutTablePrimaryButtonHoverBorderColor);
          background-color: if((@LayoutTablePrimaryButtonHoverBackground=normal), @LayoutGlobalBackground, @LayoutTablePrimaryButtonHoverBackground);
          font-size: if((@LayoutTablePrimaryButtonHoverFontSize=normal), @LayoutGlobalFontSize, @LayoutTablePrimaryButtonHoverFontSize);
          color: if((@LayoutTablePrimaryButtonHoverColor=normal), @LayoutGlobalColor, @LayoutTablePrimaryButtonHoverColor);
        }
      }
    }
    .ant-table-wrapper {
      margin: 1rem 0 0 0;
    }
    .ant-table {
      font-size: if((@LayoutTableFontSize=normal), @LayoutGlobalFontSize, @LayoutTableFontSize);
      text-align: if((@LayoutTableAlign=normal), @LayoutGlobalAlign, @LayoutTableAlign);
      color: if((@LayoutTableColor=normal), @LayoutGlobalColor, @LayoutTableColor);
      margin: if((@LayoutTableMargin=normal), @LayoutGlobalMargin, @LayoutTableMargin);
      .ant-table-body {
        max-height: 26rem !important;
      }
      .ant-table-content .ant-table-header > table,
      .ant-table-content .ant-table-body > table,
      .ant-table-content .ant-table-fixed-left table,
      .ant-table-content .ant-table-fixed-right table {
        border: if((@LayoutTableBorder=normal), @LayoutGlobalBorder, @LayoutTableBorder);
        border-right: 0;
      }
      .ant-table-content .ant-table-thead > tr > th, .ant-table-content .ant-table-tbody > tr > td {
        border-right: if((@LayoutTableBorder=normal), @LayoutGlobalBorder, @LayoutTableBorder);
      }
      .ant-table-thead th {
        font-size: if((@LayoutTableHeadFontSize=normal), @LayoutGlobalFontSize, @LayoutTableHeadFontSize);
        line-height: if((@LayoutTableHeadHeight=normal), @LayoutGlobalHeight, @LayoutTableHeadHeight);
        background-color: if((@LayoutTableHeadBgColor=normal), @LayoutGlobalBackground, @LayoutTableHeadBgColor);
        color: if((@LayoutTableHeadColor=normal), @LayoutGlobalColor, @LayoutTableHeadColor);
        text-align: if((@LayoutModalTableTextAlign=normal), @LayoutGlobalAlign, @LayoutModalTableTextAlign);
        padding: if((@LayoutTablePadding=normal), @LayoutGlobalPadding, @LayoutTablePadding);
        font-weight: if((@LayoutTableHeadFontWeight=normal), normal, @LayoutTableHeadFontWeight);
      }
      .ant-table-tbody td {
        padding: if((@LayoutTablePadding=normal), @LayoutGlobalPadding, @LayoutTablePadding);
        line-height: if((@LayoutTableHeadHeight=normal), @LayoutGlobalHeight, @LayoutTableHeadHeight);
        text-align: if((@LayoutModalTableTextAlign=normal), @LayoutGlobalAlign, @LayoutModalTableTextAlign);
        > * {
          line-height: 2rem;
          display: inline-block;
        }
        .form-group {
          width: 100%;
          .form-text {
            padding-right: 0;
          }
        }
      }
    }
    .ant-table-pagination {
      margin: if((@LayoutPageMargin=normal), @LayoutGlobalMargin, @LayoutPageMargin);
      font-size: if((@LayoutPageFontSize=normal), @LayoutGlobalFontSize, @LayoutPageFontSize);
      color: if((@LayoutPageColor=normal), @LayoutGlobalColor, @LayoutPageColor);
      li {
        margin: if((@LayoutPageLiMargin=normal), @LayoutGlobalMargin, @LayoutPageLiMargin);
        height: if((@LayoutPageLiHeight=normal), @LayoutGlobalHeight, @LayoutPageLiHeight);
        min-width: if((@LayoutPageLiWidth=normal), auto, @LayoutPageLiWidth);
        line-height: if((@LayoutPageLiHeight=normal), @LayoutGlobalHeight, @LayoutPageLiHeight);
        border: if((@LayoutPageLiBorder=normal), @LayoutGlobalBorder, @LayoutPageLiBorder);
        border-radius: if((@LayoutPageLiBorderRadius=normal), 0, @LayoutPageLiBorderRadius);
        background-color: if((@LayoutPageLiBackground=normal), @LayoutGlobalBackground, @LayoutPageLiBackground);
        &.ant-pagination-prev, &.ant-pagination-next {
          border: 0;
          border-radius: 0;
          .ant-pagination-item-link {
            border: if((@LayoutPageLiBorder=normal), @LayoutGlobalBorder, @LayoutPageLiBorder);
            border-radius: if((@LayoutPageLiBorderRadius=normal), 0, @LayoutPageLiBorderRadius);
          }
        }
        &.ant-pagination-total-text {
          border: 0;
        }
        a {
          border-radius: 0;
          font-size: if((@LayoutPageNumberFontSize=normal), @LayoutGlobalFontSize, @LayoutPageNumberFontSize);
          color: if((@LayoutPageNumberColor=normal), @LayoutGlobalColor, @LayoutPageNumberColor);
        }
        &.ant-pagination-item-active {
          border-color: if((@LayoutPageCurrentNumberBorderColor=normal), @LayoutGlobalColor, @LayoutPageCurrentNumberBorderColor);
          a {
            color: if((@LayoutPageCurrentNumberColor=normal), @LayoutGlobalColor, @LayoutPageCurrentNumberColor);
          }
        }
      }
    }
  }
}

/*
* 下拉列表样式
*/
.engine-select-dropdown {
  font-size: if((@LayoutSelectListFontSize=normal), @LayoutGlobalFontSize, @LayoutSelectListFontSize);
  padding: if((@LayoutSelectListPadding=normal), @LayoutGlobalPadding, @LayoutSelectListPadding);
  background-color: if((@LayoutSelectListBackground=normal), @LayoutGlobalBackground, @LayoutSelectListBackground);
  text-align: if((@LayoutSelectListAlign=normal), @LayoutGlobalAlign, @LayoutSelectListAlign);
  border-radius: 0;
  border: if((@LayoutSelectListBorder=normal), @LayoutGlobalBorder, @LayoutSelectListBorder);
  .ant-select-dropdown-menu-item {
    color: if((@LayoutSelectListItemColor=normal), @LayoutGlobalColor, @LayoutSelectListItemColor);
    background-color: if((@LayoutSelectListItemBackground=normal), @LayoutGlobalBackground, @LayoutSelectListItemBackground);
    line-height: if((@LayoutSelectListItemLineHeight=normal), 2rem, @LayoutSelectListItemLineHeight);
    padding: if((@LayoutSelectListItemPadding=normal), @LayoutGlobalPadding, @LayoutSelectListItemPadding);
    border-radius: 0;
    font-weight: if((@LayoutSelectListItemBold=normal), normal, @LayoutSelectListItemBold);
  }
  .ant-select-dropdown-menu-item-active {
    color: if((@LayoutSelectListItemSelectColor=normal), @LayoutGlobalColor, @LayoutSelectListItemSelectColor);
    background-color: if((@LayoutSelectListItemSelectBackground=normal), @LayoutGlobalBackground, @LayoutSelectListItemSelectBackground);
    font-weight: if((@LayoutSelectListItemSelectBold=normal), normal, @LayoutSelectListItemSelectBold);
  }
}

/*
* 气泡确认框
*/
.engine-popconfirm {
  .ant-popover-inner, .ant-popover-arrow {
    background-color: if((@LayoutPopconfirmBackground=normal), @LayoutGlobalBackground, @LayoutPopconfirmBackground);
  }
  .ant-popover-inner-content {
    padding: if((@LayoutPopconfirmPadding=normal), @LayoutGlobalPadding, @LayoutPopconfirmPadding);
    color: if((@LayoutPopconfirmColor=normal), @LayoutGlobalColor, @LayoutPopconfirmColor);
    font-size: if((@LayoutPopconfirmFontSize=normal), @LayoutGlobalFontSize, @LayoutPopconfirmFontSize);
    .ant-popover-message {
      padding: if((@LayoutPopconfirmTitlePadding=normal), @LayoutGlobalPadding, @LayoutPopconfirmTitlePadding);
      line-height: if((@LayoutPopconfirmTitleLineHeight=normal), @LayoutGlobalPadding, @LayoutPopconfirmTitleLineHeight);
      color: inherit;
      font-size: inherit;
      .anticon {
        top: 5px;
        font-size: if((@LayoutPopconfirmIconFontSize=normal), @LayoutGlobalFontSize, @LayoutPopconfirmIconFontSize);;
        color: if((@LayoutPopconfirmTitleIconColor=normal), @LayoutGlobalColor, @LayoutPopconfirmTitleIconColor);
      }
    }
    .ant-popover-buttons {
      .ant-btn {
        font-size: if((@LayoutPopconfirmBtnFontSize=normal), @LayoutGlobalFontSize, @LayoutPopconfirmBtnFontSize);
        color: if((@LayoutPopconfirmBtnColor=normal), @LayoutGlobalColor, @LayoutPopconfirmBtnColor);
        background: if((@LayoutPopconfirmBtnBackground=normal), @LayoutGlobalBackground, @LayoutPopconfirmBtnBackground);
        border: if((@LayoutPopconfirmBtnBorder=normal), @LayoutGlobalBorder, @LayoutPopconfirmBtnBorder);
      }
      .ant-btn-primary {
        color: if((@LayoutPopconfirmPrimaryBtnColor=normal), @LayoutGlobalColor, @LayoutPopconfirmPrimaryBtnColor);
        background: if((@LayoutPopconfirmPrimaryBtnBackground=normal), @LayoutGlobalBackground, @LayoutPopconfirmPrimaryBtnBackground);
        border: if((@LayoutPopconfirmPrimaryBtnBorder=normal), @LayoutGlobalBorder, @LayoutPopconfirmPrimaryBtnBorder);
      }
    }
  }
}

/*
* 模态框 弹框样式
*/
.engine-mobile-page {
  font-size: 0;
  *{
    font-size: 16px;
  }
  &-mask{
    position: fixed;
    bottom: 0;
    right: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4);
    z-index: 5000;
  }
  &-content{
    position: fixed;
    z-index: 5001;
    bottom: 0;
    left: 0;
    right: 0;
    height: 400px;
    background-color: #fff;
    padding: 0 15px;
  }
  &-header{
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    align-items: center;
    height: 30px;
  }
  &-title{
    flex: 1;
  }
  &-buttons{
    width:60px;
    color:#108ee9;
    text-align: right;
    padding-top: 4px;
  }
  &-drag{
    height: 20px;
    box-sizing: border-box;
    padding-top: 7px;
  }
  &-draghandle{
    display: block;
    margin: 0 auto;
    width: 100px;
    height: 6px;
    background-color: #ddd;
    border-radius: 5px;
  }
  &-list{
    margin-top: 10px;
    .engine-select-muilt{
      &-item{
        &::before{
          content: ' ';
          width: 16px;
          height: 10px;
          margin-top: 2px;
          display: inline-block;
          margin-right: 10px;
        }
        &.engine-select-muilt-disabled{
          background-color: #f4f4f4;
          .am-list-line {
            .am-list-content{
              color: #888;
            }
          }
        }
        &.engine-select-muilt-selected{
          &::before{
            color: #108ee9;
            font-size: 18px;
            border-left: 2px solid #108ee9;
            border-bottom: solid 2px #108ee9;
            transform: rotate(-45deg);
            margin-top: -5px;
          }
        }
      }
    }
  }
  .am-list-view-scrollview {
    overflow: auto;
    &-content{
      width:100%!important;
    }
  }
  .am-list-item {
    background-color: inherit;
    border-bottom: solid 1px #dddddd;
  }
  .engine-mobile-nav-btn {
    display: inline-block;
    height: 4.5rem;
    line-height: 4.5rem;
    padding: 0 0.5rem;
  }
  .engine-modal-table{
    .engine-mobile-list{
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 0;
      &.hide {
        display: none;
      }
      &.engine-mobile-list-select{
        .engine-mobile-list-content{
          width:90%;
          &.engine-mobile-page-single-row{
            .am-list-body{
              &::before{
                display: none;
              }
              &::after{
                display: none;
              }
              .am-list-item{
                background-color:transparent;
                .am-list-content{
                  display: none;
                }
                .am-list-extra{
                  flex-basis: 100%;
                  text-align: center;
                }
              }
            }
          }
        }
      }
      .am-list-item {
        background-color: transparent;
        border-bottom:0;
      }
      .engine-mobile-list-check{
        width: 10%;
        text-align: center;
        &.engine-mobile-radio{
          .am-radio{
            border-radius: 10px;
          }
          .checked{
            .am-radio-inner{
              height: 12px;
              top: 0px;
              right: 5px;
            }
          }
        }
        .checked{
          .am-radio-inner{
            border-style: solid;
            border-width: 1.5px;
            border-color: #3399ff;
            border-left-width: 0;
            border-top-width: 0;
            transform:rotate(45deg);
            width:7px;
            height: 14px;
            top:-1px;
            right:5px;
          }
        }
        .am-radio{
          width:20px;
          height:20px;
          border:solid 1px #ccc;
          box-sizing: border-box;
          .am-radio-inner::after{
            display: none;
          }
          > *{
            width: inherit;
            height: inherit;
          }
        }
      }
      .engine-mobile-list-content{
        width: 100%;
        .am-list-body .am-list-item .am-list-line{
          border-bottom: solid 1px #ededed;
          .am-list-line{
            border-bottom: 0;
          }
        }
        .am-list-line{
          &::after{
            height: 0;
            content: '';
          }
        }
        .am-list-content{
          flex-basis: 30%;
          color: @LayoutGlobalColor;
          font-size:@LayoutGlobalFontSize;
        }
        .am-list-extra{
          flex-basis: 70%;
          color: @LayoutGlobalColor;
          font-size:@LayoutGlobalFontSize;
        }
      }
    }
  }
}

/*
* api 气泡样式
*/
.engine-api-popover {
  font-size: if((@LayoutPopoverFontSize=normal), @LayoutGlobalFontSize, @LayoutPopoverFontSize);
  color: if((@LayoutPopoverColor=normal), @LayoutGlobalColor, @LayoutPopoverColor);
  &.ant-popover-placement-bottom {
    .ant-popover-content {
      .ant-popover-arrow {
        border-top-color: if((@LayoutPopoverBackground=normal), @LayoutGlobalBackground, @LayoutPopoverBackground);
        border-left-color: if((@LayoutPopoverBackground=normal), @LayoutGlobalBackground, @LayoutPopoverBackground);
      }
    }
  }
  &.ant-popover-placement-top {
    .ant-popover-content {
      .ant-popover-arrow {
        border-bottom-color: if((@LayoutPopoverContentBackground=normal), @LayoutGlobalBackground, @LayoutPopoverContentBackground);
        border-right-color: if((@LayoutPopoverContentBackground=normal), @LayoutGlobalBackground, @LayoutPopoverContentBackground);
      }
    }
  }
  .ant-popover-inner {
    background-color: if((@LayoutPopoverBackground=normal), @LayoutGlobalBackground, @LayoutPopoverBackground);
    border-radius: if((@LayoutPopoverBorderRadius=normal), 0, @LayoutPopoverBorderRadius);
  }
  .ant-popover-title {
    font-size: if((@LayoutPopoverTitleFontSize=normal), @LayoutGlobalFontSize, @LayoutPopoverTitleFontSize);
    color: if((@LayoutPopoverTitleColor=normal), @LayoutGlobalColor, @LayoutPopoverTitleColor);
    min-height: unset;
    padding: if((@LayoutPopoverTitlePadding=normal), @LayoutGlobalPadding, @LayoutPopoverTitlePadding);
    border-bottom: if((@LayoutPopoverTitleBorder=normal), @LayoutGlobalBorder, @LayoutPopoverTitleBorder);
    font-weight: if((@LayoutPopoverTitleBold=normal), normal, @LayoutPopoverTitleBold);
  }
  .ant-popover-inner-content {
    padding: if((@LayoutPopoverContentPadding=normal), @LayoutGlobalPadding, @LayoutPopoverContentPadding);
    color: inherit;
    background-color: if((@LayoutPopoverContentBackground=normal), @LayoutGlobalBackground, @LayoutPopoverContentBackground);
    max-width: if((@LayoutPopoverContentMaxWidth=normal), unset, @LayoutPopoverContentMaxWidth);
    min-width: if((@LayoutPopoverContentMinWidth=normal), unset, @LayoutPopoverContentMinWidth);
    .ant-spin-container {
      padding: 0;
    }
  }
  &-list {
    .form-item {
      > div {
        padding: 0 !important;
      }
      .form-label {
        padding: if((@LayoutPopoverContentListLabelPadding=normal), @LayoutGlobalPadding, @LayoutPopoverContentListLabelPadding);
        color: if((@LayoutPopoverContentListLabelColor=normal), @LayoutGlobalColor, @LayoutPopoverContentListLabelColor);
        font-size: if((@LayoutPopoverFontSize=normal), @LayoutGlobalFontSize, @LayoutPopoverFontSize);
        font-weight: if((@LayoutPopoverContentListLabelBold=normal), normal, @LayoutPopoverContentListLabelBold);
      }
      .form-text {
        padding: if((@LayoutPopoverContentListTextPadding=normal), @LayoutGlobalPadding, @LayoutPopoverContentListTextPadding);
        color: if((@LayoutPopoverContentListTextColor=normal), @LayoutGlobalColor, @LayoutPopoverContentListTextColor);
        font-size: if((@LayoutPopoverFontSize=normal), @LayoutGlobalFontSize, @LayoutPopoverFontSize);
        font-weight: if((@LayoutPopoverContentListTextBold=normal), normal, @LayoutPopoverContentListTextBold);
      }
      .form-label, .form-text {
        background-color: transparent;
        word-wrap: break-word;
      }
    }
  }
}

/*
 * tags控件样式
 */
.engine-customer-tags {
  // 集成基本的样式结构
  .control-extend-style();
  border: if((@LayoutInputBorder=normal), @LayoutGlobalBorder, @LayoutInputBorder);
  border-radius: if((@LayoutInputBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutInputBorderRadius);
  display: flex;
  align-items: center;
  width: inherit;
  min-height: if((@LayoutModalHeight=normal), @LayoutGlobalHeight, @LayoutModalHeight);
  // 主体内容样式
  .engine-customer-tags-content {
    display: inline-flex;
    flex-wrap: wrap;
    align-items: center;
    padding-left: 5px;
    // 内容中每个标签的独立样式
    .engine-customer-tags-contentItem {
      // 本身antd控件中的样式
      margin-top: 5px;
      margin-right: 5px;
      padding-bottom: 5px;
      .ant-tag {
        background-color: if((@LayoutTagsItemBackground=normal), @LayoutGlobalBackground, @LayoutTagsItemBackground);
        color: if((@LayoutTagsItemColor=normal), @LayoutGlobalColor, @LayoutTagsItemColor);
        margin-right: unset;
        // tags中的标签样式
        > i {
          color: if((@LayoutTagsItemColor=normal), @LayoutGlobalColor, @LayoutTagsItemColor);
          font-size: 16px;
          cursor: pointer;
          margin-left: auto;
          vertical-align: middle;
          position: relative;
          top: -1px;
          right: -5px;
          &:hover {
            transform: scale(1.1)
          }
        }
      }
    }
  }
}

/*
 * tree 控件样式
 */
.engine-tree {
  // 集成基本的样式结构
  .control-extend-style();
  border: if((@LayoutInputBorder=normal), @LayoutGlobalHeight, @LayoutInputBorder);
  border-radius: if((@LayoutInputBorderRadius=normal), @LayoutGlobalBorderRadius, @LayoutInputBorderRadius);
  width: inherit;
  height: inherit;
  display: flex;
  align-items: center;
  overflow-x: auto;
}

/*** 所有控件的扩展基本样式 ***/

.engine-previewimage {
  > div:nth-of-type(1) {
    display: inline-flex;
    margin-left: 11.4rem;
  }
  > div:nth-of-type(2) {
    position: absolute;
    z-index: 9;
  }
}

// 设置 子元素溢出滚动
.engine-overflowx {
  overflow-x: auto !important;
}

// 设置针对 tabs下form控件的样式
.engine-tabsform {
  display: flex;
  flex-wrap: wrap;
  > p {
    margin: 0 10px;
  }
}

// 设置当前鼠标箭头为手指
.engine-cursorpointer {
  cursor: default !important;
  * {
    cursor: default !important;
  }
}

// 针对穿梭框进行样式兼容的设置
.engine-transfer {
  display: flex;
  justify-content: space-around;
  align-items: center;
  min-height: 30rem; // 左右侧选择框的样式 class名称相同 中间相隔一个div
  > div:nth-of-type(1),
  > div:nth-of-type(3) {
    flex: 1;
    min-height: 300px;
    height: inherit !important;
    .ant-empty {
      position: absolute;
      left: calc(~"50% - 2.5rem");
      top: 5rem;
    }
  }
}

// 设置css3 -webkit-fill-available 使得控件在设置内外边距的时候 不至于被内部宽高进行抵消
.engine-fillavailable {
  // width: -webkit-fill-available;
  width: 100%; // overflow-x: auto;
}

.engine-fullwidth {
  width: 100%;
}

.enigne-autowidth {
  width: auto;
}

.engine-nomargintop {
  margin-top: 0px;
}

// css3阻止控件展示列表中被点击
.engine-event-none {
  pointer-events: none;
}

// 设置empty元素的状态
.engine-nodata {
  > div.ant-empty-image {
    height: 3rem;
  }
  > p {
    color: rgba(0, 0, 0, 0.25);
  }
}

.engine-readonly {
  pointer-events: none;
  background-color: #f1f1f1;
  div.ant-select-selection, span.ant-select-selection {
    background-color: #e3e3e3 !important;
  }
}

.engine-readonly-havevent {
  background-color: #f1f1f1;
}

.engine-displayNone {
  width: 0;
  font-size: 0;
  padding: 0 !important;
  border: 0 !important;
  display: none;
  > * {
    display: none;
  }
}

.engine-nouploadicon {
  .ant-progress-outer {
    padding-right: 0 !important;
    margin-right: 0 !important;
    width: 10rem;
  }
  .ant-progress-text {
    // visibility: hidden;
    display: none;
  }
}

// 设置table超出自动滚动
.ant-table-content {
  overflow-x: auto;
}

// 设置upload控件中的遮罩层
// 在实例下会被覆盖
.ant-upload-list-picture-card .ant-upload-list-item-info:before {
  left: 0;
}

// 设置transfer控件的默认高度
.propshidden {
  display: none !important;
}

/* 预览控件样式Start */
// 控件中的图片预览功能开发
.engine-preview-image {
  text-align: center;
}

/* 预览控件样式End */

// 多选按钮中的配置按钮组样式 配置在多选中对应的操作按钮
div.settingContent {
  margin-left: auto;
  font-size: 14px;
  height: inherit;
  line-height: inherit;
  text-align: center;
  border-left: 1px solid #ddd;
  vertical-align: top;
  > i {
    // 增加无论多少长度居中对齐
    display: inline-flex;
    align-items: center;
    justify-content: center;
    &.setting {
      cursor: pointer;
      margin-left: auto;
      height: inherit;
      width: 3.1rem;
      line-height: inherit;
    }
    &.close {
      width: 3.1rem;
    }
    > svg {
      margin-top: 0.6rem;
      font-size: 14px;
    }
  }
}

/*** 所有控件基础属性End ***/
